variables:

  shared: barrier[threadCount][threadCount] (each thread/process has its element locally)
  init: barrier[*][*] := 0

code per thread/process:

  for distance := 1; distance < numThreads; distance *= 2 {
    to   := (threadIndex + distance) % threadCount
    from := (threadIndex - distance) % threadCount

    barrier[to][threadIndex] := 1

    while barrier[threadIndex][from] != 1 {}
  }

// implementations/remember-others-and-add-fetch-rapl/main.c search for "dissemination barrier { "
