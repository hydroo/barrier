variables:

  shared: barrier[threadCount] (one array element per cache line)
  local: c (local copy of barrier[threadIndex])
  init: barrier[*] := 0

code per thread:

  c := barrier[threadIndex] + 1                // store the current counter locally
  barrier[threadIndex] := c                    // I arrived

  for i := 0; i < threadCount; i += 1 {        // for each thread
    if barrier[i] < c {                        // if one did not arrive
      i := -1
      continue                                 // repeat from start
    }
  }


// implementations/remember-others-and-add-fetch-rapl/main.c search for "super wasteful 2 barrier { "
