variables:

  shared:
    barrier1
    barrier2
    barrier3
  init:
    barrier1 := numThreads
    barrier2 := numThreads
    barrier3 := 0                           // not resetted

code per thread/process:

  if barrier3 = 0 {                         // if barrier3 is not resetted
    barrier(barrier1, barrier3)
  } else if barrier1 = 0 {                  // if barrier1 is not resetted
    barrier(barrier2, barrier1)
  } else if barrier2 = 0 {                  // if barrier2 is not resetted
    barrier(barrier3, barrier2)
  }


  func barrier(bar, delBar) {
    atomic{bar := bar - 1};
    while bar != 0 {}

    delBar = numThreads                   // reset barrier2
  }

// implementations/remember-others-and-add-fetch-rapl/main.c search for "add fetch barrier { "
