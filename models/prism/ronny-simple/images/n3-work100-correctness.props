// *** shared memory begin ***

// one or zero threads can be in modified state at a time
P<=0 [F (bar_0_state=someoneIsModified   &  bar_0_who!=0 & bar_0_who!=me_bit_0 & bar_0_who!=me_bit_1 & bar_0_who!=me_bit_2)];

// one and only one thread can be in atomic op state at a time
P<=0 [F (bar_0_state=someoneDoesAtomicOp &               bar_0_who!=me_bit_0 & bar_0_who!=me_bit_1 & bar_0_who!=me_bit_2)];

// one or zero threads can be in modified state at a time
P<=0 [F (bar_1_state=someoneIsModified   &  bar_1_who!=0 & bar_1_who!=me_bit_0 & bar_1_who!=me_bit_1 & bar_1_who!=me_bit_2)];

// one and only one thread can be in atomic op state at a time
P<=0 [F (bar_1_state=someoneDoesAtomicOp &               bar_1_who!=me_bit_0 & bar_1_who!=me_bit_1 & bar_1_who!=me_bit_2)];

// one or zero threads can be in modified state at a time
P<=0 [F (bar_2_state=someoneIsModified   &  bar_2_who!=0 & bar_2_who!=me_bit_0 & bar_2_who!=me_bit_1 & bar_2_who!=me_bit_2)];

// one and only one thread can be in atomic op state at a time
P<=0 [F (bar_2_state=someoneDoesAtomicOp &               bar_2_who!=me_bit_0 & bar_2_who!=me_bit_1 & bar_2_who!=me_bit_2)];


// *** shared memory end ***

// *** thread begin ***

P>=1 [F all_are_done]

// the following 4 queries partition the state space and have to add up to the total state count
filter(+, P=? [all_are_working]) + filter(+, P=? [one_is_writing]) + filter(+, P=? [one_is_reading]) + filter(+, P=? [all_are_done])

// *** thread end ***
