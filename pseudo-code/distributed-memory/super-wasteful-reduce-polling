shared: barrier[threadCount] (each process owns its own array element)
local: me:=$2^{threadIndex}$, full:=$\sum_{i=0}^{numThreads-1}2^i$
init: barrier[*] := 0

barrier[threadIndex] := 1

mask := full & ~me;

i := 0
b := 2^i

while mask != 0 {
	if mask&b != 0 {
		if barrier[i] == 1 {
			mask = mask & ~b;
		}
	}

	i := i + 1
	b := 2^i
}

// resetting not handled here
