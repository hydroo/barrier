shared: barrier[threadCount] (each process owns its own array element)
local: me:=$2^{threadIndex}$, full:=$\sum_{i=0}^{numThreads-1}2^i$
init: barrier[*] := 0

barrier[threadIndex] := full & ~me;

i := 0
b := 2^i

while barrier[threadIndex] != 0 {

	if barrier[threadIndex] & b != 0 {
		barrier[threadIndex] = barrier[threadIndex] & barrier[i];
	}

	i := i + 1
	b := 2^i
}

// resetting not handled here
